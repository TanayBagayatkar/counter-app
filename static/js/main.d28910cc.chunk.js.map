{"version":3,"sources":["components/app/CounterComponent.js","index.js"],"names":["CounterComponent","props","useState","currCounterValue","setCurrCounterValue","initialValue","maxValue","setCounterWithValue","value","val","Number","isNaN","className","type","onClick","disabled","onChange","e","target","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAqFeA,MAlFf,SAA0BC,GAEtB,MAAgDC,mBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAwCF,mBAAS,GAAjD,mBAAOG,EAAP,KACA,GADA,KACgCH,mBAAS,MAAzC,mBAAOI,EAAP,KAgCMC,GAhCN,KAgC4B,SAAAC,GAAK,OAAI,WACjC,IAAMC,EAAMC,OAAOF,GACdG,MAAMF,GAIPL,EAAoBC,GAHpBD,EAAoBI,MA6B5B,OACI,mCACI,sBAAKI,UAAU,YAAf,UACI,uBAAOC,KAAK,SAASC,QAASP,EAAoBJ,EAAmB,GAAIY,SAAUZ,GAAoBE,EAAcO,UAAU,eAAeJ,MAAM,MACpJ,uBAAOI,UAAU,YAAYI,SA1Bf,SAACC,GAEvB,IAAMT,EAAQE,OAAOO,EAAEC,OAAOV,OAE1BG,MAAMH,GACNW,MAAM,+BAGFX,EAAQF,EACRa,MAAM,gCAAD,OAAiCb,IAQtCF,EAAoBI,IASuCA,MAAOL,IAClE,uBAAOU,KAAK,SAASC,QAASP,EAAoBJ,EAAmB,GAAIY,SAAUZ,GAAoBG,EAAUM,UAAU,cAAcJ,MAAM,YCvE/JY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.d28910cc.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './CounterComponent.css';\r\n\r\nfunction CounterComponent(props) {\r\n\r\n    const [currCounterValue, setCurrCounterValue] = useState(1);\r\n    const [initialValue, setInitialValue] = useState(1);\r\n    const [maxValue, setMaxValue] = useState(1000);\r\n\r\n    // useEffect(() => {\r\n    //     const counterFromLocalStorage = Number(localStorage.getItem('counter'));\r\n    //     if (counterFromLocalStorage) {\r\n    //         setCurrCounterValue(counterFromLocalStorage);\r\n    //     }\r\n    // }, [])\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem('counter', currCounterValue.toString());\r\n    // }, [currCounterValue])\r\n\r\n    // useEffect(() => {\r\n    //     const counterFromLocalStorage = Number(localStorage.getItem('counter'));\r\n    //     if (counterFromLocalStorage <= initialValue && isFinite(initialValue)) {\r\n    //         setCounter(initialValue);\r\n    //     }\r\n    // }, [initialValue])\r\n\r\n    // useEffect(() => {\r\n    //     const counterFromLocalStorage = Number(localStorage.getItem('counter'));\r\n    //     if (!isFinite(maxValue)) {\r\n    //         setCounter(1000);\r\n    //     }\r\n    //     else if (counterFromLocalStorage >= maxValue) {\r\n    //         setCounter(maxValue);\r\n    //     }\r\n    // }, [maxValue])\r\n\r\n\r\n\r\n    const setCounterWithValue = value => () => {\r\n        const val = Number(value);\r\n        if (!isNaN(val)) {\r\n            setCurrCounterValue(value);\r\n        }\r\n        else {\r\n            setCurrCounterValue(initialValue);\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        // setInputVal(e.target.value);\r\n        const value = Number(e.target.value);\r\n\r\n        if (isNaN(value)) {\r\n            alert('Please enter a valid number');\r\n        }\r\n        else {\r\n            if (value > maxValue) {\r\n                alert(`Value cannot be greater than ${maxValue}`);\r\n            }\r\n\r\n            // else if (value < initialValue) {\r\n            //     alert(`Value cannot be less than ${initialValue} `);\r\n            // }\r\n\r\n            else {\r\n                setCurrCounterValue(value);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <input type=\"button\" onClick={setCounterWithValue(currCounterValue - 1)} disabled={currCounterValue <= initialValue} className=\"minus-button\" value=\"-\" />\r\n                <input className=\"num-input\" onChange={handleInputChange}  value={currCounterValue}  />\r\n                <input type=\"button\" onClick={setCounterWithValue(currCounterValue + 1)} disabled={currCounterValue >= maxValue} className=\"plus-button\" value=\"+\" />\r\n\r\n            </div>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default CounterComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CounterComponent from './components/app/CounterComponent';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CounterComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}