{"version":3,"sources":["components/app/CounterComponent.js","index.js"],"names":["CounterComponent","props","useState","currCounterValue","setCurrCounterValue","initialValue","maxValue","useEffect","alert","temp","document","getElementById","container","style","width","setCounterWithValue","value","val","Number","isNaN","id","className","type","onClick","disabled","onChange","e","target","ReactDOM","render","StrictMode"],"mappings":"8MAoFeA,MAjFf,SAA0BC,GACtB,MAAgDC,mBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACMC,EAAeH,mBAAS,GACxBI,EAAWJ,mBAAS,KAU1BK,qBAAU,WACFJ,IAAqBG,IACrBE,MAAM,iCACNJ,EAAoBD,EAAmB,IAEvCA,EAAmBE,IACnBG,MAAM,+BACNJ,EAAoB,IAExB,IAAMK,EAAOC,SAASC,eAAe,OAC/BC,EAAYF,SAASC,eAAe,aACvCR,EAAiB,KAChBM,EAAKI,MAAMC,MAAM,OACjBF,EAAUC,MAAMC,MAAM,WAG3B,CAACX,EAAkBE,EAAcC,IAEpC,IAAMS,EAAsB,SAAAC,GAAK,OAAI,WACjC,IAAMC,EAAMC,OAAOF,GACdG,MAAMF,GAIPb,EAAoBC,GAHpBD,EAAoBY,KAmC5B,OACI,mCACI,sBAAKI,GAAG,YAAYC,UAAU,YAA9B,UACI,uBAAOC,KAAK,SAASC,QAASR,EAAoBZ,EAAmB,GAAIqB,SAAUrB,GAAoBE,EAAcgB,UAAU,eAAeL,MAAM,MACpJ,uBAAOI,GAAG,MAAMC,UAAU,YAAYI,SAhCxB,SAACC,GAEvB,IAAMV,EAAQE,OAAOQ,EAAEC,OAAOX,OAE1BG,MAAMH,GACNR,MAAM,+BAGFQ,EAAQV,EACRE,MAAM,gCAAD,OAAiCF,IAItCF,EAAoBY,IAmB+CA,MAAOb,IAC1E,uBAAOmB,KAAK,SAASC,QAASR,EAAoBZ,EAAmB,GAAIqB,SAAUrB,GAAoBG,EAAUe,UAAU,cAAcL,MAAM,YCxE/JY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,U","file":"static/js/main.0c447104.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './CounterComponent.css';\r\n\r\nfunction CounterComponent(props) {\r\n    const [currCounterValue, setCurrCounterValue] = useState(1);\r\n    const initialValue = useState(1);\r\n    const maxValue = useState(1000);\r\n\r\n    // To remember the state of counter:\r\n    // useEffect(() => {\r\n    //     const counterFromLocalStorage = Number(localStorage.getItem('counter'));\r\n    //     if (counterFromLocalStorage) {\r\n    //         setCurrCounterValue(counterFromLocalStorage);\r\n    //     }\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        if (currCounterValue === maxValue) {\r\n            alert('Reached Maximum Counter Value');\r\n            setCurrCounterValue(currCounterValue - 1);\r\n        }\r\n        if (currCounterValue < initialValue) {\r\n            alert('Reached at Start of Counter');\r\n            setCurrCounterValue(1);\r\n        }\r\n        const temp = document.getElementById(\"txt\");\r\n        const container = document.getElementById(\"container\");\r\n        if(currCounterValue>99){\r\n            temp.style.width=\"38px\";\r\n            container.style.width=\"200px\";\r\n        }\r\n        \r\n    }, [currCounterValue, initialValue, maxValue])\r\n\r\n    const setCounterWithValue = value => () => {\r\n        const val = Number(value);\r\n        if (!isNaN(val)) {\r\n            setCurrCounterValue(value);\r\n        }\r\n        else {\r\n            setCurrCounterValue(initialValue);\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        const value = Number(e.target.value);\r\n\r\n        if (isNaN(value)) {\r\n            alert('Please enter a valid number');\r\n        }\r\n        else {\r\n            if (value > maxValue) {\r\n                alert(`Value cannot be greater than ${maxValue}`);\r\n            }\r\n\r\n            else {\r\n                setCurrCounterValue(value);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    \r\n// const st=true;\r\n//     let textAreaStyle = {\r\n//         if(currCounterValue>2){\r\n\r\n//         }\r\n//   };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"container\" className=\"container\">\r\n                <input type=\"button\" onClick={setCounterWithValue(currCounterValue - 1)} disabled={currCounterValue <= initialValue} className=\"minus-button\" value=\"-\" />\r\n                <input id=\"txt\" className=\"num-input\" onChange={handleInputChange} value={currCounterValue} />\r\n                <input type=\"button\" onClick={setCounterWithValue(currCounterValue + 1)} disabled={currCounterValue >= maxValue} className=\"plus-button\" value=\"+\" />\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CounterComponent;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport CounterComponent from './components/app/CounterComponent';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CounterComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}